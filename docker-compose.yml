version: "3.8"

services:
  tubee:
    command: "./docker-entrypoint.sh"
    container_name: "tubee_app"
    depends_on:
      - "postgres"
      - "celery"
    env_file:
      - "instance/production.env"
    environment:
      FLASK_ENV: "production"
    image: "tomy0000000/tubee"
    networks:
      - "postgres_tunnel"
      - "rabbitmq_tunnel"
    ports:
      - "127.0.0.1:5000:5000"
    restart: "always"
    volumes:
      - "./instance:/usr/src/tubee/instance"
      - "./logs:/usr/src/tubee/logs"
  postgres:
    container_name: "tubee_db"
    env_file:
      - "instance/production.env"
    image: "postgres:12-alpine"
    networks:
      - "postgres_tunnel"
    restart: "always"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
  celery:
    command:
      ["celery", "--app=celery_worker.celery", "worker", "--loglevel=info"]
    container_name: "tubee_celery"
    depends_on:
      - "rabbitmq"
    env_file:
      - "instance/production.env"
    environment:
      FLASK_ENV: "production"
    image: "tomy0000000/tubee"
    networks:
      - "rabbitmq_tunnel"
    restart: "always"
    volumes:
      - "./instance:/usr/src/tubee/instance"
      - "./logs:/usr/src/tubee/logs"
  rabbitmq:
    container_name: "tubee_rabbitmq"
    hostname: "tubee-rabbitmq"
    image: "rabbitmq:3.8"
    networks:
      - "rabbitmq_tunnel"
    restart: "always"
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"

networks:
  postgres_tunnel:
  rabbitmq_tunnel:

volumes:
  postgres_data:
  rabbitmq_data:
